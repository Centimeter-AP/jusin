#include <iostream>

using namespace std;

// 캡슐화 : 기본적인 속성을 알기 때문에 뭐가 들었는지 몰라도 먹는 목감기약 같이 만드는것

// static은 정적변수 (Data영역에들어감)

// static 클래스 함수
// 객체 생성을 하지 않아도 네임스페이스만으로 전역적으로 호출해 사용이 가능함
// 그냥 전역함수인데 c++로 오며 캡슐화를 지키며 사용하는 문법
// 은닉. 캡슐. 객체가 가리키는 추상적 개념.을 지키며 함수를 모아둘 줄 알아야하겠지 ...
// 클래스 함수 내에선 클래스 멤버 변수의 사용이 원천 불가능함 (생성의 시점이 항상 문제되기 때문)
// 같은 자료형의 여러 객체가 같은 static 변수를 조작해도 공유가 됨.

// friend 키워드(안나갔는데 그냥 궁금)

class CObj
{
private:
	static int m_iA;	// 클래스 변수
						// static 멤버 변수가 절대 아님. 멤버가 아님 !!!!!!!!!!
	// 클래스의 멤버는 아니지만 소속은 되어있음.(CObj::m_iA)
	// 그렇기 때문에 클래스에 메모리도 영향주지 않고 생성과도 무관함.
	// 사용접근권한만 네임스페이스(CObj::)를 통해 가능한 별개의 존재
public:
	CObj()
	{}
	~CObj()
	{}
};

int main()
{
	
	return 0;
}
