#include <iostream>

using namespace std;

// 상속 : 부모로부터 공통적인 속성이 될 만한 자료와 기능을 물려 받는 것을 의미
// - 공통적인 요소들끼리 같은 자료형으로 묶어서 관리하기 위함
// 용량이 커질 수 있다 부모의 것을 무조건 받기 때문에
// 용량과 속도 면에서 손해를 보긴 한다
// 비대화, 오버헤드(속도증가?)

// 상속시 반드시 부모 클래스의 헤더를 포함시켜야 한다

// 부모는 자식한테 정보제공하고 자식의 것을 쓸 수는 없음...... 이 상속성
// 부모: 전 쓸건데요 <- ....다형성
// 이게 왜 됨?

// 부모가 가진 m_iA를 쓸 때 부모::m_iA라고 쓸 수 있음
// 자식에게도 동일한 이름의 m_iA를 가질 수도 있다는 뜻임

// 부모는 곧 인터페이스로 바꾸게 될 것

// virtual... 
// 갑자기 생각난 atomic은 스레드 연산이네요? 잊읍시다


int main()
{
	// friend는 아이패드에썼어




	return 0;
}
